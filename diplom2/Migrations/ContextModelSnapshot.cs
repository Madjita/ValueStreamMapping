// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using diplom2.Data;

namespace diplom2.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DiplomReactNetCore.DAL.Models.DataBase.ActualOrderCurrentSection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ActualBufferVSMId")
                        .HasColumnType("int");

                    b.Property<int?>("ActualEtapSectionsId")
                        .HasColumnType("int");

                    b.Property<int?>("ActualEtapVSMId")
                        .HasColumnType("int");

                    b.Property<byte>("OrderSectionState")
                        .HasColumnType("tinyint");

                    b.Property<int>("Orders_production_itemsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Orders_production_itemsId");

                    b.ToTable("ActualOrderCurrentSection");
                });

            modelBuilder.Entity("DiplomReactNetCore.DAL.Models.DataBase.ArchiveSection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte>("ArchiveSectionRole")
                        .HasColumnType("tinyint");

                    b.Property<int?>("EtapSectionsId")
                        .HasColumnType("int");

                    b.Property<int?>("Orders_production_itemsId")
                        .HasColumnType("int");

                    b.Property<float?>("Time")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("EtapSectionsId");

                    b.HasIndex("Orders_production_itemsId");

                    b.ToTable("ArchiveSection");
                });

            modelBuilder.Entity("DiplomReactNetCore.DAL.Models.DataBase.BufferVSM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Max")
                        .HasColumnType("int");

                    b.Property<int?>("MinHold")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReplenishmentCount")
                        .HasColumnType("int");

                    b.Property<int?>("ReplenishmentSec")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Value")
                        .HasColumnType("int");

                    b.Property<int?>("ValueDefault")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("BufferVSM");
                });

            modelBuilder.Entity("DiplomReactNetCore.DAL.Models.DataBase.BufferVSMQueue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte>("BufferRole")
                        .HasColumnType("tinyint");

                    b.Property<int?>("BufferVSMId")
                        .HasColumnType("int");

                    b.Property<int?>("Orders_production_itemsId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TAdd")
                        .HasColumnType("datetime2");

                    b.Property<float?>("TFuture")
                        .HasColumnType("real");

                    b.Property<DateTime?>("TPop")
                        .HasColumnType("datetime2");

                    b.Property<float?>("TWait")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("BufferVSMId");

                    b.HasIndex("Orders_production_itemsId");

                    b.ToTable("BufferVSMQueue");
                });

            modelBuilder.Entity("DiplomReactNetCore.DAL.Models.DataBase.CardVSM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BufferVSMId")
                        .HasColumnType("int");

                    b.Property<int?>("EtapNumeric")
                        .HasColumnType("int");

                    b.Property<int?>("EtapVSMId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductionsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BufferVSMId");

                    b.HasIndex("EtapVSMId");

                    b.HasIndex("ProductionsId");

                    b.ToTable("CardVSM");
                });

            modelBuilder.Entity("DiplomReactNetCore.DAL.Models.DataBase.EtapSections", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("EtapVSMId")
                        .HasColumnType("int");

                    b.Property<int?>("Orders_production_itemsId")
                        .HasColumnType("int");

                    b.Property<float?>("TActual")
                        .HasColumnType("real");

                    b.Property<float?>("TMax")
                        .HasColumnType("real");

                    b.Property<float?>("TMin")
                        .HasColumnType("real");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<bool?>("Work")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("EtapVSMId");

                    b.HasIndex("Orders_production_itemsId");

                    b.HasIndex("UserId");

                    b.ToTable("EtapSections");
                });

            modelBuilder.Entity("DiplomReactNetCore.DAL.Models.DataBase.EtapVSM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float?>("ActualAvailability")
                        .HasColumnType("real");

                    b.Property<float?>("ActualTimeCircle")
                        .HasColumnType("real");

                    b.Property<float?>("ActualTimePreporation")
                        .HasColumnType("real");

                    b.Property<float?>("DefaultAvailability")
                        .HasColumnType("real");

                    b.Property<float?>("DefaultTimeCircle")
                        .HasColumnType("real");

                    b.Property<float?>("DefaultTimePreporation")
                        .HasColumnType("real");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Parallel")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("EtapVSM");
                });

            modelBuilder.Entity("DiplomReactNetCore.DAL.Models.DataBase.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("OrderRole")
                        .HasColumnType("tinyint");

                    b.Property<int?>("Priority")
                        .HasColumnType("int");

                    b.Property<bool?>("Simulation")
                        .HasColumnType("bit");

                    b.Property<float?>("TActual")
                        .HasColumnType("real");

                    b.Property<DateTime?>("TAdd")
                        .HasColumnType("datetime2");

                    b.Property<float?>("TFuture")
                        .HasColumnType("real");

                    b.Property<float?>("TPlan")
                        .HasColumnType("real");

                    b.Property<DateTime?>("TStart")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("TStop")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("DiplomReactNetCore.DAL.Models.DataBase.Orders_production", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<byte>("OrderRole")
                        .HasColumnType("tinyint");

                    b.Property<int?>("Priority")
                        .HasColumnType("int");

                    b.Property<int>("ProductionsId")
                        .HasColumnType("int");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<bool?>("Simulation")
                        .HasColumnType("bit");

                    b.Property<float?>("TActual")
                        .HasColumnType("real");

                    b.Property<DateTime?>("TAdd")
                        .HasColumnType("datetime2");

                    b.Property<float?>("TFuture")
                        .HasColumnType("real");

                    b.Property<float?>("TPlan")
                        .HasColumnType("real");

                    b.Property<DateTime?>("TStart")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("TStop")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductionsId");

                    b.ToTable("Orders_production");
                });

            modelBuilder.Entity("DiplomReactNetCore.DAL.Models.DataBase.Orders_production_items", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte>("OrderRole")
                        .HasColumnType("tinyint");

                    b.Property<int>("Orders_productionId")
                        .HasColumnType("int");

                    b.Property<int>("Part")
                        .HasColumnType("int");

                    b.Property<int?>("Priority")
                        .HasColumnType("int");

                    b.Property<bool?>("Simulation")
                        .HasColumnType("bit");

                    b.Property<float?>("TActual")
                        .HasColumnType("real");

                    b.Property<float?>("TDefault")
                        .HasColumnType("real");

                    b.Property<float?>("TFuture")
                        .HasColumnType("real");

                    b.Property<DateTime?>("TStart")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("TStop")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Orders_productionId");

                    b.ToTable("Orders_production_items");
                });

            modelBuilder.Entity("DiplomReactNetCore.DAL.Models.DataBase.Productions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Productions");
                });

            modelBuilder.Entity("auntification.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Department")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Patronymic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserRole")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DiplomReactNetCore.DAL.Models.DataBase.ActualOrderCurrentSection", b =>
                {
                    b.HasOne("DiplomReactNetCore.DAL.Models.DataBase.Orders_production_items", "Orders_production_items")
                        .WithMany("OrderCurrentSection")
                        .HasForeignKey("Orders_production_itemsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Orders_production_items");
                });

            modelBuilder.Entity("DiplomReactNetCore.DAL.Models.DataBase.ArchiveSection", b =>
                {
                    b.HasOne("DiplomReactNetCore.DAL.Models.DataBase.EtapSections", "EtapSections")
                        .WithMany("ArchiveSection")
                        .HasForeignKey("EtapSectionsId");

                    b.HasOne("DiplomReactNetCore.DAL.Models.DataBase.Orders_production_items", "OrderItem")
                        .WithMany()
                        .HasForeignKey("Orders_production_itemsId");

                    b.Navigation("EtapSections");

                    b.Navigation("OrderItem");
                });

            modelBuilder.Entity("DiplomReactNetCore.DAL.Models.DataBase.BufferVSMQueue", b =>
                {
                    b.HasOne("DiplomReactNetCore.DAL.Models.DataBase.BufferVSM", null)
                        .WithMany("BufferVSMQueue")
                        .HasForeignKey("BufferVSMId");

                    b.HasOne("DiplomReactNetCore.DAL.Models.DataBase.Orders_production_items", "CurrentOrderItems")
                        .WithMany()
                        .HasForeignKey("Orders_production_itemsId");

                    b.Navigation("CurrentOrderItems");
                });

            modelBuilder.Entity("DiplomReactNetCore.DAL.Models.DataBase.CardVSM", b =>
                {
                    b.HasOne("DiplomReactNetCore.DAL.Models.DataBase.BufferVSM", "BufferVSM")
                        .WithMany()
                        .HasForeignKey("BufferVSMId");

                    b.HasOne("DiplomReactNetCore.DAL.Models.DataBase.EtapVSM", "EtapVSM")
                        .WithMany()
                        .HasForeignKey("EtapVSMId");

                    b.HasOne("DiplomReactNetCore.DAL.Models.DataBase.Productions", "Production")
                        .WithMany()
                        .HasForeignKey("ProductionsId");

                    b.Navigation("BufferVSM");

                    b.Navigation("EtapVSM");

                    b.Navigation("Production");
                });

            modelBuilder.Entity("DiplomReactNetCore.DAL.Models.DataBase.EtapSections", b =>
                {
                    b.HasOne("DiplomReactNetCore.DAL.Models.DataBase.EtapVSM", null)
                        .WithMany("EtapSections")
                        .HasForeignKey("EtapVSMId");

                    b.HasOne("DiplomReactNetCore.DAL.Models.DataBase.Orders_production_items", "CurrentOrderItems")
                        .WithMany()
                        .HasForeignKey("Orders_production_itemsId");

                    b.HasOne("auntification.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("CurrentOrderItems");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DiplomReactNetCore.DAL.Models.DataBase.Orders_production", b =>
                {
                    b.HasOne("DiplomReactNetCore.DAL.Models.DataBase.Order", "Order")
                        .WithMany("Orders_production")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DiplomReactNetCore.DAL.Models.DataBase.Productions", "Production")
                        .WithMany()
                        .HasForeignKey("ProductionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Production");
                });

            modelBuilder.Entity("DiplomReactNetCore.DAL.Models.DataBase.Orders_production_items", b =>
                {
                    b.HasOne("DiplomReactNetCore.DAL.Models.DataBase.Orders_production", "Orders_production")
                        .WithMany("Orders_production_items")
                        .HasForeignKey("Orders_productionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Orders_production");
                });

            modelBuilder.Entity("DiplomReactNetCore.DAL.Models.DataBase.BufferVSM", b =>
                {
                    b.Navigation("BufferVSMQueue");
                });

            modelBuilder.Entity("DiplomReactNetCore.DAL.Models.DataBase.EtapSections", b =>
                {
                    b.Navigation("ArchiveSection");
                });

            modelBuilder.Entity("DiplomReactNetCore.DAL.Models.DataBase.EtapVSM", b =>
                {
                    b.Navigation("EtapSections");
                });

            modelBuilder.Entity("DiplomReactNetCore.DAL.Models.DataBase.Order", b =>
                {
                    b.Navigation("Orders_production");
                });

            modelBuilder.Entity("DiplomReactNetCore.DAL.Models.DataBase.Orders_production", b =>
                {
                    b.Navigation("Orders_production_items");
                });

            modelBuilder.Entity("DiplomReactNetCore.DAL.Models.DataBase.Orders_production_items", b =>
                {
                    b.Navigation("OrderCurrentSection");
                });
#pragma warning restore 612, 618
        }
    }
}
